TODO stack
----------

* use Interval in the various forms like time_step

* Un netgraph DNS et TCP

* Un graph pour les métriques HTTP/DNS qui permet de grapher en fonction du 
temps la volumétrie (soit nombre de requète, soit volume, soit durée) group by
un paramètre (ip src, ip dst, hostname, hostname+url, noms requit...)

* Pour simplifier le netgraph, une métrique virtuelle avec :
  - vlan, mac+ip source, mac+ip dest, mac+ip proto (filtre: vlan, etc)
  - un type (dns, traffic, web, tcp...) (filtre: multiselect)
  - un nombre de requètes source vers dest (filtre: #query min)
  - un flag ok ou nok (filtre: ok/nok/both)
  - une string pour identifier quoi (agrégeable), en option (pour agréger 
	plus) (filtre: substring match + checkbox pour activer la collecte)
et c'est ça qu'on grapherait dans netgraph.

* Une config permettant d'associer des couleurs à des hosts (basé sur mac ou 
ip), et qu'on utiliserait pour colorer des lignes ou des nodes svg.

* Filters for http method, vlan, etc, should be multiselect or
accept syntax such as "3,5,67-78", and these params should be returned
as functions. The only exception is ip srv which is used as an index.

* in the netgraph, display roles or IPs, as the port the IP is server for (ie
traffic decomposition by srv port - or a button to open a page with this info 
for this IP).

* in the netgraph, display MTU/traffic per link

* in the netgraph, client side search engine for IP/Mac

* Add metric for Sql, VoIP, ARP, ...

* Remove all non-ip traffic when we ask an IP peer graph

* Apart in place where we have Y per secs, keep integers instead of floats
  for volumes.

* Timestamp should recognize some keywords such as now.

* Timestamp read as relative date should be kept that way (ie. Timestamp
should be Abs of ts | Rel of float.

* Move code from traffic.ml / dns.ml / web.ml into www/index.ml Ctlr *or*
  make all these available from cmd line

* A queries chart as a cloud of dots

* A max packet size chart, as an histogram

* A metric for notifications (displayed on graphs and tables and netgraph (in 
a separate window)

* In all time charts where the selected period spans no more than 10 days,
display in chart background the night times with a sligh dark-blue bgcolor.
Same spirit: add a vertical bar at current time.

* junkie.scm: for http, add an intermediary state between query and answer
matching any packet belonging to this cnx in order to reset the timeout clock.

* Add the possibility to listen on any event in netmatch (like HTTP end of 
body)

* Add payload and its transfert time to web metric


* A repair tool (scanning files and reporting those that cannot be read,
  for later inspection/deletion, or offering to truncate the file (or merely
display file and offset where the error occured))


* Fix multiple writer by flushing in O_APPEND after complete tuples


* In the same spirit than locking, write a file with the textual 
representation of the record type in a table directory (and check it when 
opening the table).


* Think of a way to ensure that when we compute a hash to select a part of
a table we actually hash the correct datatype (ie. Dns0.hash takes a full 
record, extract something then hash this, while Dns0.dump hash a server IP,
check that what Dns0.hash extract is also an IP). Additionally, simplify
the index handling (Dns0.dump is too complex wrt. index)


* Dump should be able to send output to a pipe (ssh compressed tunnel) for
distributed querying


* IP proto should be a selectbox


* nettrack language should provide special function to create a new capfile,
  add a packet to it, discard it, save it, etc. Ie. a capture type with most
  operations implemented in C.

