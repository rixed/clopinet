#
# Path to compiler
#

compiler/ocamlpath = /home/rixed/share/src
compiler/path = /home/rixed/.opam/clopinet/bin:/usr/bin
compiler/ocamlfind = ocamlfind

#
# Printers
#

# Print IP as names if true (slower but more informative)
## resolver/ip = false
#resolver/ip = true

# Same for MAC addrs
## resolver/mac = false

#
# GUI
#

# Dimension of SVG graphs
## gui/svg/width = 1000
## gui/svg/height = 800

# For inlining generated HTML, the path to the www directory
# gui/inliner/wwwdir = www

#
# GeoIP
#

# Path to GeoIP database file with geographic coordinates
geoip/database = /usr/share/GeoIP/GeoLiteCity.dat

# Max number of IP to display in traffic map bubbles
## geoip/max_ips = 10

#
# DB
#

# Basedir location
## db/base_dir = ./test.db
db/base_dir = /home/rixed/share/src/clopinet/test.db

# How many DB files are kept open for writing (needs restart)
## db/max_opened_filedescr = 1000

# Max file size before rotation (needs restart)
## db/max_file_size = 1M

# Max hash size (better if prime) (needs restart)
# Delete your database if you change this
## db/max_hash_size = 1009

# Number of days to keep datafiles once full
# (will not purge anything if not defined)

db/traffic/1hour/expiration = 370 days
db/traffic/1hour/round = 1h
db/traffic/10mins/expiration = 32 days
db/traffic/10mins/round = 10mins
db/traffic/1min/expiration = 8 days

db/dns/1hour/expiration = 370 days
db/dns/1hour/round = 1hour
db/dns/10mins/expiration = 32 days
db/dns/10mins/round = 10mins
db/dns/1min/expiration = 15 days
db/dns/1min/round = 1min
db/dns/queries/expiration = 4 days

db/web/1hour/expiration = 370 days
db/web/1hour/round = 1hour
db/web/10mins/expiration = 32 days
db/web/10mins/round = 10mins
db/web/1min/expiration = 15 days
db/web/1min/round = 1min
db/web/queries/expiration = 4 days

db/tcp/1hour/expiration = 370 days
db/tcp/1hour/round = 1 hour
db/tcp/10mins/expiration = 32 days
db/tcp/10mins/round = 10 mins
db/tcp/1min/expiration = 15 days
db/tcp/1min/round = 1 min
db/tcp/sockets/expiration = 4 days

db/flow/flows/expiration = 3 days


# How many cores to scan database
# Increase only if you have many!
## db/#cores = 1

#
# Reports
#
# constitued of report/report_name/page_number/, with properties:
# - title
# - descr
# - params
#
# Then, the action 'report' will, given a name, build (with a single DB scan) build
# all the views and place them in a single html page (that can be viewed with a normal
# browser or nicely printed given a specialized CSS).

report/daily/0/title = Yesterdays Bandwidth
report/daily/0/descr = Everything starts with a BW chart...
report/daily/0/chart = Traffic/Bandwidth Evolution
report/daily/0/start = -25h
report/daily/0/stop  = now
report/daily/0/tstep = 20 mins
report/daily/0/vol-table = 10mins
report/daily/0/Y = volume
report/daily/0/groupby = port

report/daily/1/title = Yesterdays Peers
report/daily/1/descr = Host we receive data from / sent data to
report/daily/1/chart = Traffic/Peers
report/daily/1/start = -25h
report/daily/1/stop  = now
report/daily/1/vol-table = 10mins
report/daily/1/usr-filter = ip_src == eneide.happyleptic.org || ip_dst == eneide.happyleptic.org
report/daily/1/groupby = ip
report/daily/1/Y = volume
report/daily/1/series = 500

#### many of these filters (value, groupby, Y...) should be optional

#
# Subnets
#
# Define some subnets to blur IP addresses into subnets and save space.

subnets = [ 10.0.0.0/8 ; 172.16.0.0/12; 192.168.0.0/24 ]
